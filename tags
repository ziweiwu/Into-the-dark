!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Blackhole	black_hole.cpp	/^Blackhole::Blackhole() {$/;"	f	class:Blackhole
Blackhole	black_hole.hpp	/^class Blackhole : public ::Space {$/;"	c
Blackhole_hpp	black_hole.hpp	/^#define Blackhole_hpp$/;"	d
CXX	makefile	/^CXX = g++$/;"	m
CXXFLAGS	makefile	/^CXXFLAGS = -std=c++11$/;"	m
HEADERS	makefile	/^HEADERS = Space.hpp Jupyter.hpp ship.hpp black_hole.hpp menu.hpp$/;"	m
Jupyter	Jupyter.cpp	/^Jupyter::Jupyter() {$/;"	f	class:Jupyter
Jupyter	Jupyter.hpp	/^class Jupyter : public ::Space {$/;"	c
Jupyter_hpp	Jupyter.hpp	/^#define Jupyter_hpp$/;"	d
MENU_HPP	menu.hpp	/^#define MENU_HPP$/;"	d
Menu	menu.cpp	/^Menu::Menu() {$/;"	f	class:Menu
Menu	menu.hpp	/^class Menu {$/;"	c
OBJS	makefile	/^OBJS = Space.o Jupyter.o ship.o black_hole.o menu.o main.o$/;"	m
SRCS	makefile	/^SRCS = Space.cpp Jupyter.cpp ship.cpp black_hole.cpp menu.cpp main.cpp$/;"	m
Space	Space.cpp	/^Space::Space() {$/;"	f	class:Space
Space	Space.hpp	/^class Space {$/;"	c
add_antiParticles	ship.cpp	/^void ship::add_antiParticles(int quantity) {$/;"	f	class:ship
add_fuelPacks	ship.cpp	/^void ship::add_fuelPacks(int quantity) {$/;"	f	class:ship
antiMatter_created	ship.hpp	/^    bool antiMatter_created; $/;"	m	class:ship
antiParticles	ship.hpp	/^    int antiParticles;$/;"	m	class:ship
antiParticles_capacity	ship.hpp	/^    int antiParticles_capacity;$/;"	m	class:ship
antiParticles_storage	ship.hpp	/^    std::vector<std::string> antiParticles_storage;$/;"	m	class:ship
arrive	Jupyter.cpp	/^void Jupyter::arrive(ship* myship) {$/;"	f	class:Jupyter
arrive	black_hole.cpp	/^void Blackhole::arrive(ship* myship) {$/;"	f	class:Blackhole
consume_fuel	ship.cpp	/^void ship::consume_fuel(int fuel_cost){$/;"	f	class:ship
create_antiMatter	ship.cpp	/^void ship::create_antiMatter() {$/;"	f	class:ship
crews	ship.hpp	/^    int crews;$/;"	m	class:ship
currentLocation	menu.hpp	/^    Space* currentLocation;$/;"	m	class:Menu
description	Space.hpp	/^       std::string description;$/;"	m	class:Space
description	ship.hpp	/^    std::string description;$/;"	m	class:ship
display_status	ship.cpp	/^void ship::display_status() {$/;"	f	class:ship
down	Space.hpp	/^       Space *down;$/;"	m	class:Space
explore	Jupyter.cpp	/^void Jupyter::explore(ship *myship) {$/;"	f	class:Jupyter
explore	black_hole.cpp	/^void Blackhole::explore(ship *myship) {$/;"	f	class:Blackhole
explore_fuelcost	Space.hpp	/^       int explore_fuelcost;$/;"	m	class:Space
fuel	ship.hpp	/^    int fuel;$/;"	m	class:ship
fuelPacks	ship.hpp	/^    int fuelPacks;$/;"	m	class:ship
fuelPacks_capacity	ship.hpp	/^    int fuelPacks_capacity;$/;"	m	class:ship
fuelPacks_storage	ship.hpp	/^    std::vector<std::string> fuelPacks_storage;$/;"	m	class:ship
fuel_tank	ship.hpp	/^    int fuel_tank;$/;"	m	class:ship
get_antiMatter_created	ship.cpp	/^bool ship::get_antiMatter_created() { return antiMatter_created; }$/;"	f	class:ship
get_antiParticles	ship.cpp	/^int ship::get_antiParticles() { return antiParticles; }$/;"	f	class:ship
get_antiParticlesCapacity	ship.cpp	/^int ship::get_antiParticlesCapacity() { return antiParticles_capacity; }$/;"	f	class:ship
get_antiparticles	Space.cpp	/^int Space::get_antiparticles() { return num_antiparticles; }$/;"	f	class:Space
get_crews	ship.cpp	/^int ship::get_crews() { return crews; }$/;"	f	class:ship
get_description	Space.cpp	/^std::string Space::get_description() { return description; }$/;"	f	class:Space
get_description	ship.cpp	/^std::string ship::get_description() { return description; }$/;"	f	class:ship
get_down	Space.cpp	/^Space* Space::get_down() { return down; }$/;"	f	class:Space
get_fuel	ship.cpp	/^int ship::get_fuel() { return fuel; }$/;"	f	class:ship
get_fuelPacks	ship.cpp	/^int ship::get_fuelPacks() { return fuelPacks; }$/;"	f	class:ship
get_fuelPacksCapacity	ship.cpp	/^int ship::get_fuelPacksCapacity() { return fuelPacks_capacity; }$/;"	f	class:ship
get_fuel_tank	ship.cpp	/^int ship::get_fuel_tank() { return fuel_tank; }$/;"	f	class:ship
get_fuelcost	Space.cpp	/^int Space::get_fuelcost() { return explore_fuelcost; }$/;"	f	class:Space
get_fuelpacks	Space.cpp	/^int Space::get_fuelpacks() { return num_fuelpacks; }$/;"	f	class:Space
get_left	Space.cpp	/^Space* Space::get_left() { return left; }$/;"	f	class:Space
get_name	Space.cpp	/^std::string Space::get_name() { return name; }$/;"	f	class:Space
get_name	ship.cpp	/^std::string ship::get_name() { return name; }$/;"	f	class:ship
get_quitGame	menu.cpp	/^bool Menu::get_quitGame() { return quitGame; }$/;"	f	class:Menu
get_right	Space.cpp	/^Space* Space::get_right() { return right; }$/;"	f	class:Space
get_survive	menu.cpp	/^bool Menu::get_survive() { return survive; }$/;"	f	class:Menu
get_up	Space.cpp	/^Space* Space::get_up() { return up; }$/;"	f	class:Space
left	Space.hpp	/^       Space *left;$/;"	m	class:Space
main	main.cpp	/^int main() {$/;"	f
name	Space.hpp	/^       std::string name;$/;"	m	class:Space
name	ship.hpp	/^    std::string name;  $/;"	m	class:ship
num_antiparticles	Space.hpp	/^       int num_antiparticles; $/;"	m	class:Space
num_fuelpacks	Space.hpp	/^       int num_fuelpacks; $/;"	m	class:Space
planet_menu	menu.cpp	/^void Menu::planet_menu(Space* planet, ship* myship) {$/;"	f	class:Menu
quitGame	menu.hpp	/^    bool quitGame;$/;"	m	class:Menu
right	Space.hpp	/^       Space *right;$/;"	m	class:Space
set_antiMatter_created	ship.cpp	/^void ship::set_antiMatter_created(bool flag) { antiMatter_created = flag; }$/;"	f	class:ship
set_antiParticles	ship.cpp	/^void ship::set_antiParticles(int p) { antiParticles = p; }$/;"	f	class:ship
set_antiParticlesCapacity	ship.cpp	/^void ship::set_antiParticlesCapacity(int c) { antiParticles_capacity = c; }$/;"	f	class:ship
set_antiparticles	Space.cpp	/^void Space::set_antiparticles(int n_antiparticles) {$/;"	f	class:Space
set_crews	ship.cpp	/^void ship::set_crews(int c) { crews = c; }$/;"	f	class:ship
set_description	Space.cpp	/^void Space::set_description(std::string descriptions1) {$/;"	f	class:Space
set_description	ship.cpp	/^void ship::set_description(std::string d) { description = d; }$/;"	f	class:ship
set_down	Space.cpp	/^void Space::set_down(Space* d) { down = d; }$/;"	f	class:Space
set_fuel	ship.cpp	/^void ship::set_fuel(int f) { fuel = f; }$/;"	f	class:ship
set_fuelPacks	ship.cpp	/^void ship::set_fuelPacks(int fp) { fuelPacks = fp; }$/;"	f	class:ship
set_fuelPacksCapacity	ship.cpp	/^void ship::set_fuelPacksCapacity(int c) { fuelPacks = c; }$/;"	f	class:ship
set_fuel_tank	ship.cpp	/^void ship::set_fuel_tank(int ft) { fuel_tank = ft; }$/;"	f	class:ship
set_fuelcost	Space.cpp	/^void Space::set_fuelcost(int fuelcost1) { explore_fuelcost = fuelcost1; }$/;"	f	class:Space
set_fuelpacks	Space.cpp	/^void Space::set_fuelpacks(int n_fuelpacks) { num_fuelpacks = n_fuelpacks; }$/;"	f	class:Space
set_left	Space.cpp	/^void Space::set_left(Space* l) { left = l; }$/;"	f	class:Space
set_name	Space.cpp	/^void Space::set_name(std::string name1) { name = name1; }$/;"	f	class:Space
set_name	ship.cpp	/^void ship::set_name(std::string n) { name = n; }$/;"	f	class:ship
set_quitGame	menu.cpp	/^void Menu::set_quitGame(bool flag) { quitGame = flag; }$/;"	f	class:Menu
set_right	Space.cpp	/^void Space::set_right(Space* r) { right = r; }$/;"	f	class:Space
set_survive	menu.cpp	/^void Menu::set_survive(bool flag) { survive = flag; }$/;"	f	class:Menu
set_up	Space.cpp	/^void Space::set_up(Space* u) { up = u; }$/;"	f	class:Space
ship	ship.cpp	/^ship::ship() {$/;"	f	class:ship
ship	ship.hpp	/^class ship {$/;"	c
ship_hpp	ship.hpp	/^#define ship_hpp$/;"	d
space_hpp	Space.hpp	/^#define space_hpp /;"	d
start_menu	menu.cpp	/^void Menu::start_menu() {$/;"	f	class:Menu
survive	menu.hpp	/^    bool survive; $/;"	m	class:Menu
up	Space.hpp	/^       Space *up;$/;"	m	class:Space
use_fuelPacks	ship.cpp	/^void ship::use_fuelPacks() {$/;"	f	class:ship
~Blackhole	black_hole.cpp	/^Blackhole::~Blackhole() {}$/;"	f	class:Blackhole
~Jupyter	Jupyter.cpp	/^Jupyter::~Jupyter() {}$/;"	f	class:Jupyter
~Menu	menu.cpp	/^Menu::~Menu() {}$/;"	f	class:Menu
~Space	Space.cpp	/^Space::~Space() {}$/;"	f	class:Space
~ship	ship.cpp	/^ship::~ship() {$/;"	f	class:ship
